import type { Browser } from 'webdriverio';
import type { AxeResults, PartialResult, RunOptions, Spec, PartialResults, SerialSelectorList, SerialContextObject } from 'axe-core';
import type { WdioBrowser } from './types';
/**
 * Validates that the client provided is WebdriverIO v5 or v6.
 */
export declare const isWebdriverClient: (client: WdioBrowser) => boolean;
/**
 * Get running context
 */
export declare const normalizeContext: (includes: SerialSelectorList, excludes: SerialSelectorList, disabledFrameSelectors: string[]) => SerialContextObject;
/**
 * Checks to make sure that the error thrown was not a stale iframe
 */
export declare const logOrRethrowError: (error: unknown) => void;
export declare const axeSourceInject: (client: Browser<'async'>, axeSource: string) => Promise<{
    runPartialSupported: boolean;
}>;
export declare const axeRunPartial: (client: Browser<'async'>, context?: SerialContextObject, options?: RunOptions) => Promise<PartialResult>;
export declare const axeGetFrameContext: (client: Browser<'async'>, context: SerialContextObject) => Promise<any[]>;
export declare const axeRunLegacy: (client: Browser<'async'>, context: SerialContextObject, options: RunOptions, config?: Spec) => Promise<AxeResults>;
export declare const axeFinishRun: (client: Browser<'async'>, axeSource: string, partialResults: PartialResults, options: RunOptions) => Promise<AxeResults>;
export declare const configureAllowedOrigins: (client: Browser<'async'>) => Promise<void>;
